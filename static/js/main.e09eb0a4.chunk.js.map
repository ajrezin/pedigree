{"version":3,"sources":["PedigreeTree.js","ManageTree.js","App.js","index.js"],"names":["PedigreeTree","pedigree","setCurrentNode","manageTreeRef","visibleAttributeProps","nodeSize","x","y","foreignObjectProps","width","height","className","data","initialDepth","pathFunc","depthFactor","zoom","separation","nonSiblings","siblings","scaleExtent","max","min","translate","pathClassFunc","renderCustomNodeElement","rd3tProps","nodeDatum","toggleNode","style","Box","tabIndex","onKeyDown","e","key","current","focus","onFocus","background","elevation","fill","id","flex","pad","justify","Heading","size","truncate","textAlign","margin","gap","align","name","sex","Text","attributes","color","birthday","hips","children","length","Button","onClick","label","__rd3t","collapsed","renderForeignObjectNode","radioOptions","value","ManageTree","currentNode","setVisibleAttribute","ref","chicNum","registrationType","registrationNum","dnaInfo","ofaLink","Anchor","default","href","target","RadioButtonGroup","options","onChange","selectedValue","console","log","newAttributes","JSON","parse","stringify","setAttributeFromRadio","Paragraph","require","App","useState","visibleAttribute","useRef","Grommet","node","attributeObj","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e09eb0a4.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Button, Heading, Text } from 'grommet';\nimport Tree from 'react-d3-tree';\n\nconst renderForeignObjectNode = ({\n  nodeDatum,\n  toggleNode,\n  setCurrentNode,\n  manageTreeRef,\n  foreignObjectProps,\n  visibleAttributeProps\n}) => (\n  <g>\n    {/* `foreignObject` requires width & height to be explicitly set. */}\n    <foreignObject {...foreignObjectProps}>\n      <div style={{ height: \"92%\", width: \"97%\" }} data-xmlns=\"http://www.w3.org/1999/xhtml\">\n        <Box\n          tabIndex=\"0\"\n          onKeyDown={(e) => {\n            if (e.key === \"ArrowLeft\"\n              || e.key === \"ArrowRight\"\n              || e.key === \" \") {\n              toggleNode()\n            }\n            if (e.key === \"Enter\") {\n              manageTreeRef.current.focus()\n            }\n          }}\n          onFocus={() => { setCurrentNode(nodeDatum) }}\n          background=\"light-2\"\n          elevation=\"large\"\n          fill={true}\n          id=\"node\"\n        >\n          <Box flex={true} pad=\"medium\" justify=\"around\">\n            <Heading size=\"xxsmall\" truncate={true} textAlign=\"center\" margin=\"none\" pad=\"none\" gap=\"none\" align=\"center\">\n              {nodeDatum.name}\n            </Heading>\n            <Box align=\"center\" gap=\"small\">\n              {visibleAttributeProps.sex && (<Text size=\"xxlarge\">Sex: {nodeDatum.attributes.sex}</Text>)}\n              {visibleAttributeProps.color && (<Text size=\"xxlarge\">Color: {nodeDatum.attributes.color}</Text>)}\n              {visibleAttributeProps.birthday && (<Text size=\"xxlarge\">Birthday: {nodeDatum.attributes.birthday}</Text>)}\n              {visibleAttributeProps.hips && (<Text size=\"xxlarge\">Hips: {nodeDatum.attributes.hips}</Text>)}\n              {nodeDatum.children.length !== 0 && (\n                <div>\n                  <Button\n                    onClick={toggleNode}\n                    tabIndex=\"-1\"\n                    label={nodeDatum.__rd3t.collapsed ? \"Show Ancestors\" : \"Hide Ancestors\"}\n                    size=\"xxlarge\"\n                  />\n                </div>\n              )}\n              {nodeDatum.children.length === 0 && (\n                <Text size=\"xxlarge\">No Known Ancestors</Text>\n              )}\n            </Box>\n          </Box>\n        </Box>\n      </div>\n      {/* <div\n        className=\"node\"\n        tabIndex=\"0\"\n        onKeyDown={(e) => {\n          if (e.key === \"ArrowLeft\"\n            || e.key === \"ArrowRight\"\n            || e.key === \" \") {\n            toggleNode()\n          }\n          if (e.key === \"Enter\") {\n            manageTreeRef.current.focus()\n          }\n        }}\n        onFocus={() => {\n          console.log(nodeDatum)\n          setCurrentNode(nodeDatum)\n        }}\n      >\n        <div className=\"nodeContents\">\n          <div style={{ fontWeight: \"700\" }}>{nodeDatum.name}</div>\n          {visibleAttributeProps.sex && (<div>Sex: {nodeDatum.attributes.sex}<br></br></div>)}\n          {visibleAttributeProps.color && (<div>Color: {nodeDatum.attributes.color}<br></br></div>)}\n          {visibleAttributeProps.birthday && (<div>Birthday: {nodeDatum.attributes.birthday}<br></br></div>)}\n          {visibleAttributeProps.hips && (<div>Hips: {nodeDatum.attributes.hips}<br></br></div>)}\n          {nodeDatum.children.length !== 0 && (\n            <button style={{ width: \"98%\" }} onClick={toggleNode} tabIndex=\"-1\">\n              {nodeDatum.__rd3t.collapsed ? \"Show Ancestors\" : \"Hide Ancestors\"}\n            </button>\n          )}\n          {nodeDatum.children.length === 0 && (\n            <div>No Known Ancestors</div>\n          )}\n        </div>\n      </div> */}\n    </foreignObject>\n  </g >\n);\n\nexport default function PedigreeTree({ pedigree, setCurrentNode, manageTreeRef, visibleAttributeProps }) {\n  const nodeSize = { x: 500, y: 250 };\n  const nodePositionX = nodeSize.x / -2;\n  const nodePositionY = nodeSize.y / -2;\n  const foreignObjectProps = { width: nodeSize.x, height: nodeSize.y, x: nodePositionX, y: nodePositionY };\n  return (\n    // `<Tree />` will fill width/height of its container`.\n    <div className=\"treeWrapper\">\n      <Tree\n        data={pedigree}\n        initialDepth=\"4\"\n        pathFunc=\"step\"\n        depthFactor=\"700\"\n        zoom=\".3\"\n        nodeSize={nodeSize}\n        separation={{ nonSiblings: 1.4, siblings: 1.2 }}\n        scaleExtent={{ max: .5, min: .1 }}\n        translate={{ x: 100, y: 200 }}\n        pathClassFunc={() => 'path'}\n        renderCustomNodeElement={(rd3tProps) =>\n          renderForeignObjectNode({\n            ...rd3tProps,\n            setCurrentNode,\n            manageTreeRef,\n            foreignObjectProps,\n            visibleAttributeProps\n          })\n        }\n      />\n    </div>\n  );\n}","import { Anchor, Paragraph, RadioButtonGroup } from 'grommet';\nimport React from 'react';\n\nconst radioOptions = [\n  { label: \"None\", value: \"none\" },\n  { label: \"Sex\", value: \"sex\" },\n  { label: \"Color\", value: \"color\" },\n  { label: \"Birthday\", value: \"birthday\" },\n  { label: \"Hips\", value: \"hips\" },\n];\n\nconst attributes = {\n  sex: false,\n  color: false,\n  birthday: false,\n  hips: false,\n};\n\nfunction setAttributeFromRadio(selectedValue, setVisibleAttribute) {\n  console.log(selectedValue)\n  var newAttributes = JSON.parse(JSON.stringify(attributes))\n  newAttributes[selectedValue] = true\n  setVisibleAttribute(newAttributes)\n}\n\nexport default function ManageTree({ currentNode, manageTreeRef, setVisibleAttribute }) {\n  return (\n    <div className=\"manageTree\" tabIndex={-1} ref={manageTreeRef}>\n      <div className=\"dogDetails\">\n        <div className=\"sectionHeader\">{currentNode.name}</div>\n        <div className=\"dogAttributes\">\n          <div>Sex: {currentNode.attributes.sex}<br></br></div>\n          <div>Color: {currentNode.attributes.color}<br></br></div>\n          <div>Birthday: {currentNode.attributes.birthday}<br></br></div>\n          <div>CHIC #: {currentNode.attributes.chicNum}<br></br></div>\n          <div>Hips: {currentNode.attributes.hips}<br></br></div>\n          <div>\n            Reg #: {currentNode.attributes.registrationType} {currentNode.attributes.registrationNum}\n            <br></br>\n          </div>\n          <div>DNA: {currentNode.attributes.dnaInfo}<br></br></div>\n          {currentNode.attributes.ofaLink !== \"None\"\n            && currentNode.attributes.ofaLink !== \"\"\n            &&\n            <div>\n              <Anchor\n                default\n                href={currentNode.attributes.ofaLink}\n                target=\"_blank\"\n                label=\"Open OFA Page in New Tab\"\n              />\n            </div>\n          }\n        </div>\n      </div>\n      <div className=\"controls\">\n        <div className=\"sectionHeader\">Show on Pedigree</div>\n        <RadioButtonGroup\n          name=\"Show on Pedigree\"\n          options={radioOptions}\n          onChange={(e) => setAttributeFromRadio(e.target.value, setVisibleAttribute)}\n        />\n      </div>\n      <div className=\"about\">\n        <div className=\"sectionHeader\">About</div>\n        <Paragraph>\n          This web app is very much a work in progress. Please\n          contact me with any accessibility errors or bugs!\n        </Paragraph>\n        <Paragraph>\n          Created with &#9829; by&nbsp;\n          <Anchor href=\"https://arielrezin.com\" target=\"_blank\" label=\"Ariel Rezin\" />\n        </Paragraph>\n      </div>\n    </div>\n  );\n}","import React, { useRef, useState } from 'react';\nimport { Grommet, grommet } from 'grommet';\nimport { deepMerge } from 'grommet/utils';\nimport PedigreeTree from './PedigreeTree';\nimport ManageTree from './ManageTree';\n\n\nconst pedigree = require('./pedigree.json');\nconst attributes = {\n  sex: false,\n  color: false,\n  birthday: false,\n  hips: false,\n};\n\nfunction App() {\n  const [currentNode, setCurrentNode] = useState(pedigree);\n  const [visibleAttribute, setVisibleAttribute] = useState(attributes)\n  const manageTreeRef = useRef();\n\n  return (\n    <Grommet>\n      <div className=\"App\" style={{ height: \"98.5vh\" }}>\n        <PedigreeTree\n          pedigree={pedigree}\n          setCurrentNode={(node) => setCurrentNode(node)}\n          manageTreeRef={manageTreeRef}\n          visibleAttributeProps={visibleAttribute}\n        />\n        <ManageTree\n          currentNode={currentNode}\n          manageTreeRef={manageTreeRef}\n          visibleAttribute={visibleAttribute}\n          setVisibleAttribute={(attributeObj) => setVisibleAttribute(attributeObj)}\n        />\n      </div>\n    </Grommet>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}